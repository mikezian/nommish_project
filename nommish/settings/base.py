#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Django settings for nommish project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import environ

env = environ.Env()
environ.Env.read_env('.env')

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
LOG_DIR = os.path.join(os.path.dirname(os.path.abspath(BASE_DIR)), 'logs')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")
DB_PASSWORD = env("DB_PASSWORD")
DB_USER = env("DB_USER")
YUMMLY_API_KEY = env("YUMMLY_API_KEY")
YUMMLY_APP_KEY = env("YUMMLY_APP_KEY")
GOOGLE_ANALYTICS_KEY = env("GOOGLE_ANALYTICS_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # The Django sites framework is required
    'django.contrib.sites',

    # 'bootstrapform',
    # allauth
    'allauth',
    'allauth.account',
    # 'allauth.socialaccount',
    # Login via Google
    # 'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.facebook',
    'bootstrap3',

    'crispy_forms',

    # recipe app
    'recipe',
)

ROOT_URLCONF = 'nommish.urls'

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',


)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "templates")
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.core.context_processors.debug',
                'django.core.context_processors.i18n',
                'django.core.context_processors.media',
                'django.core.context_processors.static',
                'django.core.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.request',
                # Required by allauth template tags
                "django.template.context_processors.request",
                # allauth specific context processors
                # "allauth.account.context_processors.account",
                # "allauth.socialaccount.context_processors.socialaccount",
            ],
        },
    },
]

WSGI_APPLICATION = 'nommish.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'nomdb',
        'HOST': '127.0.0.1',
        'PORT': '5432',
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'SOCKET_CONNECT_TIMEOUT': 5,
            'SOCKET_TIMEOUT': 5,
            'COMPRESS_MIN_LEN': 20,
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 100
            }
        },
    },
    'cache_machine': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'KEY_PREFIX': 'djcm',
    },
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

# cache-machine
CACHE_COUNT_TIMEOUT = 60 * 24
CACHE_EMPTY_QUERYSETS = True

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = os.path.join(os.path.dirname(os.path.abspath(BASE_DIR)), 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# AllAuth settings
AUTHENTICATION_BACKENDS = (
    # Default backend -- used to login by username in Django admin
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
)

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.request",
    "django.contrib.auth.context_processors.auth",
    "allauth.account.context_processors.account",
    "allauth.socialaccount.context_processors.socialaccount",
)

SITE_ID = 1
LOGIN_REDIRECT_URL = '/'

ACCOUNT_SIGNUP_FORM_CLASS = 'recipe.forms.SignupForm'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = None
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False
ACCOUNT_SESSION_COOKIE_AGE = 60*60*24
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# fixture dir
# PROJECT_DIR = os.path.dirname(os.path.abspath(os.path.dirname(__file__)))
# FIXTURE_DIRS = (
#     os.path.join(PROJECT_DIR, 'fixtures'),
# )

# crispy forms
CRISPY_TEMPLATE_PACK = 'bootstrap3'


# Logging config
# http://stackoverflow.com/questions/20282521/django-request-logger-not-propagated-to-root/22336174#22336174

LOGGING_CONFIG = None
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s',
            'datefmt': '%Y/%b/%d %H:%M:%S'
        },
        'simple': {
            'format': '%(levelname)s %(message)s',
            'datefmt': '%Y/%b/%d %H:%M:%S'
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',
            'filename': os.path.join(LOG_DIR, 'django.log'),
            'backupCount': 10,
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['file'],
            'level': 'INFO',
            # 'propagate': True,
        },
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'recipe': {
            'handlers': ['file'],
            'level': 'ERROR',
            # 'propagate': False,
        },
        'recipe': {
            'handlers': ['file'],
            'level': 'DEBUG',
            # 'propagate': False,
        }
    }
}

import logging.config
logging.config.dictConfig(LOGGING)

# # http://stackoverflow.com/questions/2314920/django-show-log-orm-sql-calls-from-python-shell
# from django.db import connection
# connection.use_debug_cursor = True
# l = logging.getLogger('django.db.backends')
# l.setLevel(logging.DEBUG)
# l.addHandler(logging.StreamHandler())
